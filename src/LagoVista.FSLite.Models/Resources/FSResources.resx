<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Common_CreatedBy" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="Common_CreationDate" xml:space="preserve">
    <value>Creation Date</value>
  </data>
  <data name="Common_UniqueId" xml:space="preserve">
    <value>System Id</value>
  </data>
  <data name="Common_LastUpdated" xml:space="preserve">
    <value>Last Updated</value>
  </data>
  <data name="Common_LastUpdatedBy" xml:space="preserve">
    <value>Last Updated By</value>
  </data>
  <data name="Common_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Common_Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Common_Key" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="Common_Key_Help" xml:space="preserve">
    <value>The key is used to identify this item in scripts and must be unique with respect to it's parent. One a key has been assigned, it can not be changed.</value>
  </data>
  <data name="Common_Key_Validation" xml:space="preserve">
    <value>The key must use only letters and numbers, and must be lowercase and must be between 3 and 20 characters.</value>
  </data>
  <data name="Common_IsPublic" xml:space="preserve">
    <value>Is Public</value>
  </data>
  <data name="Common_IsRequired" xml:space="preserve">
    <value>Is Required</value>
  </data>
  <data name="Common_Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="Common_Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="Common_ValidationErrors" xml:space="preserve">
    <value>Validation Errors</value>
  </data>
  <data name="Common_IsValid" xml:space="preserve">
    <value>Is Valid</value>
  </data>
  <data name="Common_PageNumberOne" xml:space="preserve">
    <value>Page 1</value>
  </data>
  <data name="ServiceTicketTemplate_Description" xml:space="preserve">
    <value>A service ticket template contains the default fields to create a service ticket for maintenance.</value>
  </data>
  <data name="ServiceTicketTemplate_Help" xml:space="preserve">
    <value>A service ticket template contains the default fields to create a service ticket for maintenance.</value>
  </data>
  <data name="ServiceTicketTemplate_Title" xml:space="preserve">
    <value>Service Ticket Template</value>
  </data>
  <data name="ServiceTicket_Description" xml:space="preserve">
    <value>A service ticket is something that is generated from events from an IoT device</value>
  </data>
  <data name="ServiceTicket_Help" xml:space="preserve">
    <value>A service ticket is something that is generated from events from an IoT device </value>
  </data>
  <data name="ServiceTicket_Title" xml:space="preserve">
    <value>Service Ticket</value>
  </data>
  <data name="ServiceTicketNote_AddedBy" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="ServiceTicketNote_DateStamp" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="ServiceTicketNote_Description" xml:space="preserve">
    <value>A simple note that can be attached to a service ticket.</value>
  </data>
  <data name="ServiceTicketNote_Help" xml:space="preserve">
    <value>A simple note that can be attached to a service ticket.</value>
  </data>
  <data name="ServiceTicketNote_Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="ServiceTicketNote_Title" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="ServiceTicketStatusHistory_AddedBy" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="ServiceTicketStatusHistory_DateStamp" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="ServiceTicketStatusHistory_Description" xml:space="preserve">
    <value>Keeps track of the status history for a service ticket.</value>
  </data>
  <data name="ServiceTicketStatusHistory_Help" xml:space="preserve">
    <value>Keeps track of the status history for a service ticket.</value>
  </data>
  <data name="ServiceTicketStatusHistory_Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="ServiceTicketStatusHistory_Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="ServiceTicketStatusHistory_Title" xml:space="preserve">
    <value>Status History</value>
  </data>
  <data name="ServiceTicket_Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="ServiceTicket_AssignedTo" xml:space="preserve">
    <value>Assigned To</value>
  </data>
  <data name="ServiceTicket_Device" xml:space="preserve">
    <value>Device</value>
  </data>
  <data name="ServiceTicket_DueDate" xml:space="preserve">
    <value>Due Date</value>
  </data>
  <data name="ServiceTicket_History" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="ServiceTicket_Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="ServiceTicket_Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="ServiceTicket_StatusDate" xml:space="preserve">
    <value>Status Date</value>
  </data>
  <data name="ServiceTicket_Subject" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="ServiceTicket_TicketId" xml:space="preserve">
    <value>Ticket Id</value>
  </data>
  <data name="ServiceTicket_IsClosed" xml:space="preserve">
    <value>Is Closed</value>
  </data>
  <data name="ServiceTicket_Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="ServiceTicket_ClosedBy" xml:space="preserve">
    <value>Closed By</value>
  </data>
  <data name="ServiceTicketTemplate_Skill" xml:space="preserve">
    <value>Skill Required</value>
  </data>
  <data name="ServiceTicketTemplate_Skill_High" xml:space="preserve">
    <value>High</value>
  </data>
  <data name="ServiceTicketTemplate_Skill_Low" xml:space="preserve">
    <value>Low</value>
  </data>
  <data name="ServiceTicketTemplate_Skill_Medium" xml:space="preserve">
    <value>Medium</value>
  </data>
  <data name="ServiceTicketTemplate_Skill_Select" xml:space="preserve">
    <value>-select skill level-</value>
  </data>
  <data name="ServiceTicketTemplate_Urgency" xml:space="preserve">
    <value>Urgency</value>
  </data>
  <data name="ServiceTicketTemplate_Urgency_CriticalSafety" xml:space="preserve">
    <value>Critical/Safety</value>
  </data>
  <data name="ServiceTicketTemplate_Urgency_Important" xml:space="preserve">
    <value>Important</value>
  </data>
  <data name="ServiceTicketTemplate_Urgency_Low" xml:space="preserve">
    <value>Low</value>
  </data>
  <data name="ServiceTicketTemplate_Urgency_Normal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="ServiceTicketTemplate_Urgency_Select" xml:space="preserve">
    <value>-select urgency-</value>
  </data>
  <data name="ToolsRequired_Description" xml:space="preserve">
    <value>Tools that are required to complete this Service Ticket</value>
  </data>
  <data name="ToolsRequired_Help" xml:space="preserve">
    <value>Tools that are required to complete this Service Ticket</value>
  </data>
  <data name="ToolsRequired_Title" xml:space="preserve">
    <value>Tools Required</value>
  </data>
  <data name="ServiceTicketTemplate_HoursEstimate" xml:space="preserve">
    <value>Hours Estimate</value>
  </data>
  <data name="ServiceTicketTemplate_CostEstimate" xml:space="preserve">
    <value>Cost Estimate</value>
  </data>
  <data name="ServiceTicketTemplate_Instructions" xml:space="preserve">
    <value>Instructions</value>
  </data>
  <data name="ServiceTicketTemplate_RequiredParts" xml:space="preserve">
    <value>Required Parts</value>
  </data>
  <data name="ServiceTicketTemplate_RequiredTools" xml:space="preserve">
    <value>Required Tools</value>
  </data>
  <data name="ServiceTicketTemplate_TroubleshootingSteps" xml:space="preserve">
    <value>Troubleshooting Steps</value>
  </data>
  <data name="ServiceTicket_Details" xml:space="preserve">
    <value>Details</value>
  </data>
</root>